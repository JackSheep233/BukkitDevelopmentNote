(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{262:function(t,a,e){"use strict";e.r(a);var s=e(28),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"深入plugin-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深入plugin-yml"}},[t._v("#")]),t._v(" 深入plugin.yml")]),t._v(" "),e("p",[e("code",[t._v("plugin.yml")]),t._v("文件是Bukkit及其衍生服务端识别插件的重要文件.")]),t._v(" "),e("p",[t._v("在服务端加载插件时, 服务端加载完毕Jar文件后做的第一件事就是读取该Jar文件的"),e("code",[t._v("plugin.yml")]),t._v("文件."),e("br"),t._v("\n如果把任一可正常工作的插件的Jar文件用相应的ZIP压缩软件打开, 删除"),e("code",[t._v("plugin.yml")]),t._v("文件后再启动服务端, 会抛出错误.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Could not load 'plugins\\[YOUR_PLUGIN].jar' in folder 'plugins'  \norg.bukkit.plugin.InvalidDescriptionException: Invalid plugin.yml  \n")])])]),e("p",[t._v("可发现, 服务端将会因为没有"),e("code",[t._v("plugin.yml")]),t._v("文件而抛出"),e("code",[t._v("InvalidDescriptionException")]),t._v("错误.")]),t._v(" "),e("br"),t._v(" "),e("p",[t._v("在"),e("code",[t._v("plugin.yml")]),t._v("文件中, 目前我们已知的有"),e("code",[t._v("name")]),t._v("、"),e("code",[t._v("version")]),t._v("、"),e("code",[t._v("main")]),t._v("、"),e("code",[t._v("author")]),t._v("四个项目可以设置."),e("br"),t._v("\n事实上, "),e("code",[t._v("plugin.yml")]),t._v("文件中还有许多可以设置的项目, 部分项目是本节的内容, 其余可以在SpigotMC的官方文档中查阅到.")]),t._v(" "),e("blockquote",[e("p",[t._v("目前BukkitAPI主要由SpigotMC维护, 因此大量的BukkitAPI文档都在 SpigotMC 网站上."),e("br"),t._v("\n有关plugin.yml文件的官方文档在这里:"),e("br"),t._v("\nhttps://www.spigotmc.org/wiki/plugin-yml/")])]),t._v(" "),e("h2",{attrs:{id:"必要设置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#必要设置项"}},[t._v("#")]),t._v(" 必要设置项")]),t._v(" "),e("p",[e("code",[t._v("plugin.yml")]),t._v("文件中, "),e("code",[t._v("name")]),t._v("、"),e("code",[t._v("main")]),t._v("、"),e("code",[t._v("version")]),t._v("三项必须存在."),e("br"),t._v(" "),e("em",[t._v("这也意味着, 前面的实例中, 我们使用的"),e("code",[t._v("plugin.yml")]),t._v("文件, 删去"),e("code",[t._v("author")]),t._v("键仍可被服务端正常加载.")])]),t._v(" "),e("p",[t._v("不妨来认识一下这三个设置项.")]),t._v(" "),e("h3",{attrs:{id:"name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[t._v("#")]),t._v(" name")]),t._v(" "),e("p",[t._v("顾名思义, 它定义了插件的名称.")]),t._v(" "),e("p",[t._v("对于名称, 官方WIKI中给出了严格的要求, 即只能由 "),e("strong",[t._v("英文小写或大写字符、阿拉伯数字或下划线")]),t._v(" 构成. 决不能出现中文字符、空格等."),e("br"),t._v("\n在后续生成插件配置文件夹时, 该项设置的插件名将会是插件配置文件夹的名称.")]),t._v(" "),e("p",[t._v("起名的时候应该注意, 尽可能起一个“个性”的名称, 防止与其他插件重名.")]),t._v(" "),e("h3",{attrs:{id:"version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" version")]),t._v(" "),e("p",[t._v("指插件的版本号."),e("br"),t._v("\n该键理论上可以在后面填写任意String内容. 但是官方WIKI要求尽可能使用X.X.X格式的版本号表示(例如: 2.3.3)."),e("br"),t._v("\n关于版本号规则，可以参考"),e("a",{attrs:{href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语义化版本"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"main"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[t._v("#")]),t._v(" main")]),t._v(" "),e("p",[t._v("指插件的主类名.")]),t._v(" "),e("p",[t._v("在插件中, 主类有且只有一个, 且需要继承"),e("code",[t._v("JavaPlugin")]),t._v("类. 主类是插件的“入口”, 这里的"),e("code",[t._v("main")]),t._v("即意在说明主类的名称."),e("br"),t._v("\n这里需填写主类的全名, 也就是精确到主类所在的具体包. 说白了就是不只是需要把主类名带上, 还要把包名带上.")]),t._v(" "),e("h2",{attrs:{id:"可选设置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可选设置项"}},[t._v("#")]),t._v(" 可选设置项")]),t._v(" "),e("p",[e("code",[t._v("plugin.yml")]),t._v("文件只需要存在必要设置项的三个键即可."),e("br"),t._v("\n下面的键可选, 可有可无. 但有一些在一些特定的情况下必须要有.")]),t._v(" "),e("h3",{attrs:{id:"依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[t._v("#")]),t._v(" 依赖")]),t._v(" "),e("p",[t._v("有时候你的插件可能需要调用"),e("code",[t._v("Vault")]),t._v("（用来获取玩家货币余额）或其他的插件, 即依赖其他插件."),e("br"),t._v("\n这时候需要在"),e("code",[t._v("plugin.yml")]),t._v("文件中进行设置告知服务端, 从而保证所依赖的插件在本插件之前被加载.")]),t._v(" "),e("p",[t._v("你可以在"),e("code",[t._v("plugin.yml")]),t._v("文件中加入"),e("code",[t._v("depend")]),t._v("键或"),e("code",[t._v("softdepend")]),t._v("键来控制依赖.")]),t._v(" "),e("p",[e("code",[t._v("depend")]),t._v("键或"),e("code",[t._v("softdepend")]),t._v("键接的值必须是数组. 例如这样:")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Vault"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WorldEdit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("softdepend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Essentials"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("两个键设置的内容区别如下：")]),t._v(" "),e("ol",[e("li",[t._v("depend: 插件强制要求的依赖. 如果没有这个插件, 该插件将无法正常工作, Bukkit此时会抛出相应错误.")]),t._v(" "),e("li",[t._v("softdepend: 插件不强制要求的插件. 如果服务端内没有这个插件, 插件仍可正常工作.")])]),t._v(" "),e("p",[t._v("后面设置的数组内的内容都是所依赖插件的名称, 此处名称应与所依赖的插件的"),e("code",[t._v("plugin.yml")]),t._v("文件的"),e("code",[t._v("name")]),t._v("键的值相同.")]),t._v(" "),e("h3",{attrs:{id:"loadbefore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loadbefore"}},[t._v("#")]),t._v(" loadbefore")]),t._v(" "),e("p",[e("code",[t._v("depend")]),t._v("与"),e("code",[t._v("softdepend")]),t._v("可以实现插件在某个插件之后加载. 但也许有时你的插件可能需要实现在某个插件之前被加载."),e("br"),t._v("\n此时你可以使用"),e("code",[t._v("loadbefore")]),t._v("设置, 用法类似. 例如:")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("loadbefore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Essentials"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WorldEdit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("在上面的例子中, 可保证插件在WorldEdit与Essentials插件之前被加载.")]),t._v(" "),e("h3",{attrs:{id:"commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" commands")]),t._v(" "),e("p",[t._v("如果你的插件定义了新指令, 你第一步就需要设置该项告知服务端."),e("br"),t._v("\n此处仅做示范:")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n")])])]),e("p",[t._v("这可以告知服务端注册了指令"),e("code",[t._v("test")]),t._v(", 并且描述为"),e("code",[t._v("Hello World!")]),t._v("字符串, 该描述字符串将会在"),e("code",[t._v("/help")]),t._v("指令中被显示.")]),t._v(" "),e("h3",{attrs:{id:"author与authors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#author与authors"}},[t._v("#")]),t._v(" author与authors")]),t._v(" "),e("p",[t._v("此处不再赘述其作用.  如果你想表示多名作者, 你可以设置"),e("code",[t._v("authors")]),t._v("项, 值需为一个数组.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("authors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tdiant"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Seraph_JACK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("如果同时存在"),e("code",[t._v("author")]),t._v("与"),e("code",[t._v("authors")]),t._v(", 将忽略"),e("code",[t._v("author")]),t._v(".")])])}),[],!1,null,null,null);a.default=v.exports}}]);