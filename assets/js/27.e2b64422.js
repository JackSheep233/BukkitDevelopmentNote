(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{268:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"粒子效果及音效播放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#粒子效果及音效播放"}},[t._v("#")]),t._v(" 粒子效果及音效播放")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/unit/3-7-math.html"}},[s("strong",[t._v("阅读本文需要高中数学的几何基本知识")])])],1),t._v(" "),s("h2",{attrs:{id:"粒子效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#粒子效果"}},[t._v("#")]),t._v(" 粒子效果")]),t._v(" "),s("p",[t._v("客户端正常配置时，若对草方块上使用骨粉，草方块上会长出草丛，同时还会生成绿色的颗粒动画. 这样的动画效果就是Minecraft中的粒子效果.")]),t._v(" "),s("h3",{attrs:{id:"播放粒子效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#播放粒子效果"}},[t._v("#")]),t._v(" 播放粒子效果")]),t._v(" "),s("p",[t._v("如果想在某一个"),s("code",[t._v("Location")]),t._v("对象所对应的位置播放粒子效果，对于不同的Minecraft版本有不同的方案：")]),t._v(" "),s("h4",{attrs:{id:"playeffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#playeffect"}},[t._v("#")]),t._v(" PlayEffect")]),t._v(" "),s("p",[t._v("可以利用World类的"),s("code",[t._v("PlayEffect")]),t._v("方法:"),s("br"),t._v(" "),s("em",[t._v("对于Effect，BukkitAPI在后续的更改中，其中的枚举几乎都或多或少有些许改动。开发时应小心。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),t._v(" loc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 某一"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getWorld"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("playEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Effect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HAPPY_VILLAGER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//播放的是绿色的闪光星星⭐效果")]),t._v("\n")])])]),s("p",[s("code",[t._v("PlayEffect")]),t._v("方法在较早的BukkitAPI版本中即被加入. 在使用这一方法时需要与"),s("code",[t._v("Effect")]),t._v("打交道."),s("br"),t._v(" "),s("code",[t._v("Effect")]),t._v("是效果枚举. 值得注意的是，这其中既包含动效(Effect.Type.VISUAL)，也包含声效（Effect.Type.SOUND）.")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("作为一个老旧的API，在实际开发当中，这一方法并不常用. 其中的常见枚举（例如这里使用的HAPPY_VILLAGER）在新的API中被标记废除.")])])]),t._v(" "),s("h4",{attrs:{id:"spawnparticle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spawnparticle"}},[t._v("#")]),t._v(" spawnParticle")]),t._v(" "),s("p",[t._v("在新版的API中加入了"),s("code",[t._v("spawnParticle")]),t._v("方法. 目前开发插件常用这一方法来播放粒子效果.")]),t._v(" "),s("p",[t._v("新版的BukkitAPI有意将"),s("code",[t._v("Sound")]),t._v("与"),s("code",[t._v("Visual")]),t._v("这两个概念分隔开，对于粒子效果，在使用"),s("code",[t._v("spawnParticle")]),t._v("方法时，取"),s("code",[t._v("Effect")]),t._v("而代之的是"),s("code",[t._v("Particle")]),t._v("枚举.")]),t._v(" "),s("p",[s("em",[t._v("spawnParticle的用法较多，在此略去大篇幅对各个方法与参数的介绍，可以查阅JavaDoc，其中有十分简单易懂的注释.")]),s("br"),t._v(" "),s("em",[t._v("BukkitAPI后续更新中，枚举或多或少都有变动，应当注意！")])]),t._v(" "),s("h3",{attrs:{id:"播放所需的形状"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#播放所需的形状"}},[t._v("#")]),t._v(" 播放所需的形状")]),t._v(" "),s("blockquote",[s("p",[t._v("开发实例: 在玩家脚底播放一圈半径为1的粒子效果")])]),t._v(" "),s("p",[s("strong",[t._v("分析")])]),t._v(" "),s("ol",[s("li",[t._v("几何角度考虑")])]),t._v(" "),s("p",[t._v("以玩家脚底处为原点，建立平面直角坐标系. 如下图所示:"),s("br"),t._v(" "),s("img",{attrs:{src:"https://i.loli.net/2019/07/12/5d2893acab56b12879.jpg",alt:""}})]),t._v(" "),s("p",[s("em",[t._v("绿色部分为粒子效果")])]),t._v(" "),s("p",[t._v("由圆的定义知，所绘制的粒子为到原点的点集.")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("实现\n播放想要的形状就是逐次的在所需播放的坐标处播放粒子效果.")])]),t._v(" "),s("p",[s("em",[t._v("这里将不解释什么是弧度制，而是做强制要求，只要算角度都必须用这样的方法变为弧度制，有兴趣可以在网上查阅")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),t._v(" loc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("360")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的t表示旋转角，从0到360度遍历一遍就是转了一圈")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRadians")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//角度制变弧度制")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在这里，我们使用三角函数依次计算出了对应点的坐标.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建议作图体会这样计算的原理.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在刚开始时，loc是坐标系原点（也就是玩家所在的位置）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里我们的add将其变为了我们想要播放粒子的坐标位置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后面我们又subtract（减）将其又变为了坐标原点")]),t._v("\n    loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWorld")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawnParticle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Particle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VILLAGER_HAPPY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样我们就完成了这一效果.")]),t._v(" "),s("p",[t._v("依此，可以大致概括出实现粒子效果的基本步骤:")]),t._v(" "),s("ol",[s("li",[t._v("分析: 从数学角度分析, 思考怎么才能获得所需形状中所有的点；从代码角度分析，思考怎样才能依此获得这些点的坐标值")]),t._v(" "),s("li",[t._v("实现：利用恰当的方法播放粒子效果")])]),t._v(" "),s("h2",{attrs:{id:"音效播放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#音效播放"}},[t._v("#")]),t._v(" 音效播放")]),t._v(" "),s("p",[t._v("由于"),s("code",[t._v("Effect")]),t._v("既包含动效，也包含声效，这意味着使用与上面"),s("code",[t._v("PlayerEffect")]),t._v("方法一样的方法，我们也可以播放音效.")]),t._v(" "),s("p",[t._v("在新API中提供了"),s("code",[t._v("playSound")]),t._v("方法并且加入了"),s("code",[t._v("Sound")]),t._v("枚举. 目前常用这一方法. 这一方法是World也同样是Player类的方法, 具体使用哪一方法，取决于你希望对谁播放.")]),t._v(" "),s("p",[s("em",[t._v("BukkitAPI后续更新中，枚举或多或少都有变动，应当注意！")])])])}),[],!1,null,null,null);a.default=e.exports}}]);