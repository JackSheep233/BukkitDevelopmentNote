(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{276:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"代码中的mc世界"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码中的mc世界"}},[t._v("#")]),t._v(" 代码中的MC世界")]),t._v(" "),s("p",[t._v("你一定是玩过MC的. 那你一定也能想象出来代码化的MC是什么样子.")]),t._v(" "),s("p",[t._v("相信你有Java的开发经验的话, 一定了解JavaDoc的使用. SpigotMC官方提供了JavaDoc.")]),t._v(" "),s("blockquote",[s("p",[t._v("最新版本JavaDoc网址: "),s("a",{attrs:{href:"https://hub.spigotmc.org/javadocs/spigot/index.html?overview-summary.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.spigotmc.org/javadocs/spigot/index.html?overview-summary.html"),s("OutboundLink")],1),s("br"),t._v("\n旧版本JavaDoc网址(1.7.10): "),s("a",{attrs:{href:"http://jd.bukkit.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://jd.bukkit.org/"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("国内有一群热爱开发的人做出了中文JavaDoc, 开发时可以用以参考."),s("br"),t._v("\n最新版本中文JavaDoc网址: "),s("a",{attrs:{href:"https://bukkit.windit.net/javadoc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bukkit.windit.net/javadoc/"),s("OutboundLink")],1),s("br"),t._v("\n他们的GitHub地址: "),s("a",{attrs:{href:"https://github.com/BukkitAPI-Translation-Group/Chinese_BukkitAPI",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/BukkitAPI-Translation-Group/Chinese_BukkitAPI"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("本章大致上按照JavaDoc上罗列的包的顺序来介绍BukkitAPI所提供的各个体系和系统."),s("br"),t._v(" "),s("strong",[t._v("本章仅仅是对各个系统做大概的描述. 后续会详细讲述各个部分的内容.")])]),t._v(" "),s("h2",{attrs:{id:"世界、方块与material"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#世界、方块与material"}},[t._v("#")]),t._v(" 世界、方块与Material")]),t._v(" "),s("p",[t._v("想也不用想, MC不可能把一整个世界都存到一个文件里去, 否则这样的一个文件该有多大!\n事实上, 一个完整的世界分为了很多"),s("code",[t._v("Chunk")]),t._v(", 也就是区块. 每个区块都是X和Y为16*16的范围. 你可以认为一个世界由许多区块组成.")]),t._v(" "),s("p",[t._v("在开发时, 我们把每个世界都看成一个"),s("code",[t._v("World")]),t._v("对象, 每个区块都看成一个"),s("code",[t._v("Chunk")]),t._v("对象.\n如果我们想操作某个世界内的某个方块, 实际开发时我们可以直接调用"),s("code",[t._v("World")]),t._v("对象的方法, 而不用先寻找到"),s("code",[t._v("Chunk")]),t._v("再操作.\n每个方块都是一个"),s("code",[t._v("Block")]),t._v("对象.")]),t._v(" "),s("p",[t._v("在BukkitAPI中引入了“材质”(Material)的概念. 比如一个石头方块, 它的材质就是"),s("code",[t._v("STONE")]),t._v(", 如果一个物品的材质也是"),s("code",[t._v("STONE")]),t._v(", 那么这个物品就是玩家手上拿着的石头方块物品了."),s("br"),t._v("\n你可以为一个方块设置材质, 就像这样:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 方块"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Material")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("STONE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("想必你也能猜到了, 怎样在一个世界里“删除掉”一个方块:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Material")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AIR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置成空气就好了嘛")]),t._v("\n")])])]),s("p",[t._v("方块与方块各不一样. 有些方块是带有特有属性和功能的. 比如告示牌上面有字. 事实上, "),s("code",[t._v("Block")]),t._v("类有许多子类, 每个告示牌方块无论是墙上的还是地上杵着的都是"),s("code",[t._v("Sign")]),t._v("对象. 比如你可以像这样修改告示牌上的字:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 你获取到的告示牌方块"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 你可以用getType判断一下它的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Material")]),t._v("是不是告示牌"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sign")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接强制转换")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这样就把第一行修改成了字符串“测试”")]),t._v("\n")])])]),s("p",[s("strong",[t._v("BukkitAPI的包分类是清晰的, 所有的方块子类都在"),s("code",[t._v("org.bukkit.block")]),t._v("包内, 你完全可以利用JavaDoc, 找到所需的子类并查看用法. Material枚举量的具体内容也能查询到. 后续将不再赘述.")])]),t._v(" "),s("h2",{attrs:{id:"生物与位置对象-location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生物与位置对象-location"}},[t._v("#")]),t._v(" 生物与位置对象(Location)")]),t._v(" "),s("h3",{attrs:{id:"生物"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生物"}},[t._v("#")]),t._v(" 生物")]),t._v(" "),s("p",[t._v("在MC中, 所有的生物, 例如一只羊, 乃至一个僵尸, 又或者是玩家, 都是生物, 他们都是Entity类型的对象."),s("br"),t._v("\n这个概念还可以更加进一步的扩充, 一个被点燃的TNT, 实际上, 它也是一个实体(TNTPrimed对象).")]),t._v(" "),s("p",[t._v("当然, 与方块"),s("code",[t._v("Block")]),t._v("类类似, "),s("code",[t._v("Entity")]),t._v("拥有很多子类. 这其中最显眼的一个子类就是"),s("code",[t._v("Player")]),t._v("类了.\n"),s("code",[t._v("Player")]),t._v("类代表玩家, 每个"),s("strong",[t._v("在线的玩家")]),t._v("都有一个"),s("code",[t._v("Player")]),t._v("对象. 其实也不难理解, 如果一个玩家下线了, 那么这个玩家对应的实体当然也会消失. 你也许会纳闷, 那如何去操作一个目前不在线的玩家的数据呢? 这是个比较复杂的问题, 需要分成多个情况来解决, 这里暂不赘述.")]),t._v(" "),s("h3",{attrs:{id:"location对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location对象"}},[t._v("#")]),t._v(" Location对象")]),t._v(" "),s("p",[t._v("任何一个坐标都可由一个Location代表."),s("br"),t._v("\n常见的实体对象是Entity的子类，故都提供了"),s("code",[t._v("getLocation")]),t._v("方法，返回的"),s("code",[t._v("Location")]),t._v("对象代表着它们的坐标位置."),s("br"),t._v("\n值得一提的是，如果应用"),s("code",[t._v("getLocation")]),t._v("获取实体位置，那么获取的位置是它的脚. 例如"),s("code",[t._v("Player.getLocation()")]),t._v("所获取的是玩家的脚的位置."),s("br"),t._v("\n对于这些实体对象，如果想修改他们所在的坐标位置，Bukkit没有提供"),s("code",[t._v("setLocation")]),t._v("方法，而是提供了"),s("code",[t._v("teleport")]),t._v("方法. 通过"),s("code",[t._v("teleport")]),t._v("方法可以传送某个实体.")]),t._v(" "),s("p",[s("strong",[t._v("BlockLocation")]),s("br"),t._v("\nLocation中提供了"),s("code",[t._v("getBlockLocation()")]),t._v("、"),s("code",[t._v("getBlockX()")]),t._v("、"),s("code",[t._v("getBlockY()")]),t._v("、"),s("code",[t._v("getBlockZ()")]),t._v("四个方法."),s("br"),t._v("\n对于一个方块而言，其坐标的XYZ值均为整数，所以这些方法所获取的是此Location对应的最精确方块的坐标."),s("br"),t._v("\n通俗的理解，可以认为获取的是将XYZ四舍五入后的坐标值."),s("br"),t._v(" "),s("code",[t._v("getBlock()")]),t._v("获取的此Location对应的最精确的方块的"),s("code",[t._v("Block")]),t._v("对象.")]),t._v(" "),s("p",[s("strong",[t._v("坐标运算")]),s("br"),t._v("\nLocation提供"),s("code",[t._v("add")]),t._v("（加）、"),s("code",[t._v("subtract")]),t._v("（减）方法.")]),t._v(" "),s("p",[s("strong",[t._v("两点间距离")]),t._v("\nLocation提供"),s("code",[t._v("distance")]),t._v("方法，参数为另一个Location，返回值为double，代表两点间距离."),s("br"),t._v(" "),s("em",[t._v("Location还提供"),s("code",[t._v("distanceSquared")]),t._v("方法，代表两点间的方块距离，遵循四舍五入.")])]),t._v(" "),s("h2",{attrs:{id:"物品"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#物品"}},[t._v("#")]),t._v(" 物品")]),t._v(" "),s("p",[t._v("玩家手里拿着的东西叫物品. 物品的材质也叫"),s("code",[t._v("Material")]),t._v("."),s("br"),t._v("\n特殊的是, 某些物品与其对应的方块"),s("code",[t._v("Material")]),t._v("不一致, 例如红石比较器."),s("br"),t._v("\n红石比较器物品的种类是"),s("code",[t._v("Material.REDSTONE_COMPARATOR")]),t._v(", 而放置后的方块种类又分为"),s("code",[t._v("Material.REDSTONE_COMPARATOR_ON")]),t._v("(开启状态), "),s("code",[t._v("Material.REDSTONE_COMPARATOR_OFF")]),t._v("(关闭状态)两种, 红石比较器方块的种类不能用"),s("code",[t._v("Material.REDSTONE_COMPARATOR")]),t._v("来表示.")]),t._v(" "),s("p",[s("code",[t._v("ItemStack")]),t._v("用于反应一种描述物品堆叠的方式."),s("br"),t._v("\n一个"),s("code",[t._v("ItemStack")]),t._v("的实例, 囊括了物品的种类（其对应的"),s("code",[t._v("Material")]),t._v("）和数量等信息."),s("br"),t._v("\n例如, 玩家手中拿着三个苹果. 玩家手中的这三个苹果, 实质上是一个"),s("code",[t._v("ItemStack")]),t._v(", 它包括了这三个苹果的种类（"),s("code",[t._v("Material.APPLE")]),t._v("）、数量（"),s("code",[t._v("3")]),t._v("）与其他的一些信息.")]),t._v(" "),s("h2",{attrs:{id:"事件系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件系统"}},[t._v("#")]),t._v(" 事件系统")]),t._v(" "),s("h3",{attrs:{id:"事件的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的概念"}},[t._v("#")]),t._v(" 事件的概念")]),t._v(" "),s("p",[t._v("事件是服务器里发生的事.\n例如, 天气的变化, 玩家的移动. 玩家把树打掉, 又捡起了掉落地上的原木. 这些都是事件.")]),t._v(" "),s("p",[t._v("事件分为可控事件和不可控事件. 其最大区别在于能不能取消(也就是能不能setCancelled).\n不难理解, 玩家如果退出服务器, 这不能被取消, 它是不可控事件. 玩家的移动可以被取消, 它是可控事件.")]),t._v(" "),s("h3",{attrs:{id:"事件的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的作用"}},[t._v("#")]),t._v(" 事件的作用")]),t._v(" "),s("p",[t._v("利用BukkitAPI, 你可以监听事件, 事件触发时执行某些代码."),s("br"),t._v("\n例如, 你可以监听玩家登录服务器, 玩家登录服务器后你可以执行某些代码.")]),t._v(" "),s("p",[t._v("那么, 如果你想写登录插件, 你需要监听玩家登录服务器的事件."),s("br"),t._v("\n玩家进入服务器以后, 记录存储起来他的用户名. 等待玩家输入指令进行登录, 登录完毕以后去掉他的用户名."),s("br"),t._v("\n然后再监听其他的各种事件(比如监听方块破坏事件), 如果这些事件被触发, 判断是哪个玩家触发的, 看看玩家用户名有没有存储起来, 如果有, 那么他没有登录, 那就把这个事件取消掉.")]),t._v(" "),s("p",[t._v("通过这样的例子可以发现, 事件是一个插件最重要的组成部分!")]),t._v(" "),s("h3",{attrs:{id:"监听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听器"}},[t._v("#")]),t._v(" 监听器")]),t._v(" "),s("p",[t._v("上面我们提到可以实现事件触发时执行某些代码. 实现这个目的的方法就是写一个监听器.\n监听器实质上是一个实现了"),s("code",[t._v("Listener")]),t._v("的类, 其中包含一些带有"),s("code",[t._v("@EventHandler")]),t._v("注解的方法.")]),t._v(" "),s("p",[t._v("一个监听器大致是这样:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoListener")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Listener")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这是你定义的监听器类, 实现了Listener接口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Listener")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onPlayerMove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PlayerMoveEvent")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//比如我监听了玩家移动事件, 就应该这样创建一个这样的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//带有Listener注解, 参数是一个PlayerMoveEvent类型的参数, 代表你要监听的是PlayerMoveEvent事件")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个方法只能监听一个事件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("监听器类创建完毕后, 还需要注册它才可以真正发挥作用.")]),t._v(" "),s("h2",{attrs:{id:"命令系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令系统"}},[t._v("#")]),t._v(" 命令系统")]),t._v(" "),s("h3",{attrs:{id:"命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("p",[t._v("MC中的命令是一个字符串, 用来实现游戏内高级功能.")]),t._v(" "),s("p",[t._v("在MC客户端中, 玩家将在聊天框内输入命令.\n当且仅当在“聊天”内, 命令与普通的聊天内容的区别在于其内容的第一个字符是一个斜杠"),s("code",[t._v("/")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"对命令的代码解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对命令的代码解析"}},[t._v("#")]),t._v(" 对命令的代码解析")]),t._v(" "),s("p",[t._v("例如玩家依次输入了这些命令:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/abc\n/abc test 1\n/def create info username\n")])])]),s("p",[t._v("依次分析, 第一种和第二种"),s("strong",[t._v("并不是两种命令")]),t._v(", 区分不同的命令看紧跟斜杠的词是什么, 所以第一个和第二个本质上是同一个命令.")]),t._v(" "),s("p",[t._v("按照一个空格一个分隔的规律, 开头的一节为命令的名称, 第二个以及第二个以后的部分都是这条命令带的参数, 也就是输入这条命令的人想要传递的数据信息部分."),s("br"),t._v("\n参数部分可以表示成一个String数组, 以第三个命令为例, 参数部分可以表示为:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('args[0]: "create"\nargs[1]: "info"\nargs[2]: "username"\n')])])]),s("p",[t._v("假如你想实现一个命令, 玩家必须输入参数, 参数第一项是固定的几种答案, 你完全可以对args做些if判断来实现.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//玩家没有输入参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"固定答案1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//玩家输入了 /命令名 固定答案1 格式的命令")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你想实现的功能")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"固定答案2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//玩家输入了 /命令名 固定答案2 格式的命令")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//你想实现的功能")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//玩家没有输入固定的答案类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"权限系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限系统"}},[t._v("#")]),t._v(" 权限系统")]),t._v(" "),s("p",[t._v("BukkitAPI提供了一套权限系统."),s("br"),t._v("\n利用权限系统, 你可以实现限制有某个权限的玩家能输入某个指令、做某些事情等功能, 但没有这一权限的玩家却做不了.")]),t._v(" "),s("p",[t._v("权限一般是指一串字符串, 一般(最好遵守这样的格式)格式是"),s("code",[t._v("插件名.功能名.某一个项目的名称.xxx")]),t._v("构成, 需全为英文小写. 例如"),s("code",[t._v("testplugin.block.place")]),t._v("."),s("br"),t._v(" "),s("code",[t._v("Player")]),t._v("类有"),s("code",[t._v("hasPermission")]),t._v("方法可以检查某个玩家是否有某个权限.")]),t._v(" "),s("h2",{attrs:{id:"配置api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置api"}},[t._v("#")]),t._v(" 配置API")]),t._v(" "),s("h2",{attrs:{id:"交流系统-conversation-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交流系统-conversation-api"}},[t._v("#")]),t._v(" 交流系统(Conversation API)")]),t._v(" "),s("p",[t._v("需要注意的是, 虽然有这样的API, 但这一API在实际开发中使用频率很低.")]),t._v(" "),s("p",[t._v("如果你使用过"),s("code",[t._v("QuickShop")]),t._v("插件, 你可能会对这一功能有印象:"),s("br"),t._v("\n玩家创建了一个箱子商店, 当另一个玩家点击箱子方块前面的告示牌时, 在聊天区域会显示出商品的详情和价格, 并提示你直接在聊天区输入一个数字代表购买物品, 发送这个数字就可以购买了."),s("br"),t._v("\n如果你细细琢磨一下这一功能, 其实你可以把这一过程看成一种对话, 你和插件可以直接在聊天区内进行交流:")]),t._v(" "),s("blockquote",[s("p",[t._v("插件: 你好, 你需要多少A商品?\n你: 2\n插件: 好的, 购买成功!")])]),t._v(" "),s("p",[t._v("其实这就是一个"),s("code",[t._v("Conversation")]),t._v("了. 你可以把这样的一个对话过程做成一个"),s("code",[t._v("Prompt")]),t._v("(可以把这个理解成对话的模板), 然后在需要的时候依照这个"),s("code",[t._v("Prompt")]),t._v("生产一个"),s("code",[t._v("Conversation")]),t._v(", 并给一个玩家开始对话, 过程就像这样:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Player")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 玩家"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一些生成Conversation对象的代码之后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Conversation")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 你根据"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Prompt")]),t._v("生产出的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Conversation")]),t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开始对话")]),t._v("\n")])])]),s("h2",{attrs:{id:"inventory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inventory"}},[t._v("#")]),t._v(" Inventory")]),t._v(" "),s("p",[t._v("对于玩家背包、箱子里存放的所有"),s("code",[t._v("ItemStack")]),t._v("对象, 我们可以认为他们都储存在了一个"),s("code",[t._v("Inventory")]),t._v("对象里."),s("br"),t._v("\n也就是意味着, 一个箱子、一个玩家都对应他们专属的"),s("code",[t._v("Inventory")]),t._v("对象, 用来储存它们存放着的物品.")]),t._v(" "),s("h2",{attrs:{id:"服务器底层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器底层"}},[t._v("#")]),t._v(" 服务器底层")]),t._v(" "),s("p",[t._v("我们把原版服务端部分(全部都在"),s("code",[t._v("net.minecraft.server")]),t._v("包内)叫做"),s("code",[t._v("NMS")]),t._v(". 把Bukkit部分的底层实现部分(也就是CraftBukkit部分, 全部都在"),s("code",[t._v("org.bukkit.craftbukkit")]),t._v("包内)叫做"),s("code",[t._v("OBC")]),t._v("."),s("br"),t._v("\n有时候我们需要手工发送某些数据包来达到某些目的, 这时需要对底层代码进行操作. 通常不常操作OBC.")])])}),[],!1,null,null,null);a.default=e.exports}}]);